- id: unpack_fasterq
  external:
    ..: modules/unpack
  mocks:
    modules.unpack.src.util.sleep: ~
  structure:
    modules:
      a.py: |
        from cellophane import Executor
        from pathlib import Path

        class DummyExecutor(Executor, name="dummy"):
            def target(self, *args, env, **kwargs):
              Path(env["EXTRACTED_PATH"]).touch()

    samples.yaml: |
      - id: fasterq
        files:
          - input/file.fasterq
    input:
      file.fasterq: ""
  args:
    --workdir: work
    --samples_file: samples.yaml
    --executor_name: "dummy"
  logs:
    - Extracting file.fasterq with petagene
    - Extracted file.fastq.gz


- id: unpack_spring
  external:
    ..: modules/unpack
  mocks:
    modules.unpack.src.util.sleep: ~
  structure:
    modules:
      a.py: |
        from cellophane import Executor
        from pathlib import Path

        class DummyExecutor(Executor, name="dummy"):
            def target(self, *args, env, **kwargs):
              Path(env["EXTRACTED_PATH"]).touch()

    samples.yaml: |
      - id: spring
        files:
          - input/file.spring
    input:
      file.spring: ""
  args:
    --workdir: work
    --samples_file: samples.yaml
    --executor_name: "dummy"
  logs:
    - Extracting file.spring with spring
    - Extracted file.fastq.gz


- id: unpack_spring_multi_a
  external:
    ..: modules/unpack
  mocks:
    modules.unpack.src.util.sleep: ~
  structure:
    modules:
      a.py: |
        from cellophane import Executor
        from pathlib import Path

        class DummyExecutor(Executor, name="dummy"):
            def target(self, *args, env, **kwargs):
              base = env["EXTRACTED_PATH"].partition(".")[0]
              Path(base).with_suffix(".fastq.gz.1").touch()
              Path(base).with_suffix(".fastq.gz.2").touch()

    samples.yaml: |
      - id: spring
        files:
          - input/file.spring
    input:
      file.spring: ""
  args:
    --workdir: work
    --samples_file: samples.yaml
    --executor_name: "dummy"
  logs:
    - Extracting file.spring with spring
    - Extracted file.1.fastq.gz
    - Extracted file.2.fastq.gz


- id: unpack_spring_multi_b
  external:
    ..: modules/unpack
  mocks:
    modules.unpack.src.util.sleep: ~
  structure:
    modules:
      a.py: |
        from cellophane import Executor
        from pathlib import Path

        class DummyExecutor(Executor, name="dummy"):
            def target(self, *args, env, **kwargs):
              base = env["EXTRACTED_PATH"].partition(".")[0]
              Path(base).with_suffix(".1.fastq.gz").touch()
              Path(base).with_suffix(".2.fastq.gz").touch()

    samples.yaml: |
      - id: spring
        files:
          - input/file.spring
    input:
      file.spring: ""
  args:
    --workdir: work
    --samples_file: samples.yaml
    --executor_name: "dummy"
  logs:
    - Extracting file.spring with spring
    - Extracted file.1.fastq.gz
    - Extracted file.2.fastq.gz


- id: unpack_exception
  external:
    ..: modules/unpack
  mocks:
    modules.unpack.src.util.sleep: ~
  structure:
    modules:
      a.py: |
        from cellophane import Executor
        from pathlib import Path

        class DummyExecutor(Executor, name="dummy"):
            def target(self, *args, **kwargs):
              raise Exception("DUMMY")

    samples.yaml: |
      - id: fasterq
        files:
          - input/file.fasterq
    input:
      file.fasterq: ""
  args:
    --workdir: work
    --samples_file: samples.yaml
    --executor_name: "dummy"
  logs:
    - "Failed to extract file.fasterq: SystemExit(1)"


- id: unpack_timeout
  external:
    ..: modules/unpack
  mocks:
    modules.unpack.src.util.sleep: ~
  structure:
    modules:
      a.py: |
        from cellophane import Executor
        from pathlib import Path

        class DummyExecutor(Executor, name="dummy"):
            def target(self, *args, **kwargs):
              ...

    samples.yaml: |
      - id: fasterq
        files:
          - input/file.fasterq
    input:
      file.fasterq: ""
  args:
    --workdir: work
    --samples_file: samples.yaml
    --executor_name: "dummy"
  logs:
    - Waiting up to 60 seconds for files to become available
    - Extracted files for file.fasterq not found after 60 second

